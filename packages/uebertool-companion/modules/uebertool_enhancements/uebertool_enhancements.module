<?php

/**
 * @file
 * Provides Enhancements welcomed in every Project.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function uebertool_enhancements_theme(): array {
  return [
    'block__system_branding_block' => [
      'base hook' => 'block',
    ],
  ];
}

/**
 * Implements hook_preprocess_field().
 *
 * Add width and height attributes to svg images.
 */
function uebertool_enhancements_preprocess_field__svg_image_field(array &$vars): void {
  foreach ($vars['items'] as &$item) {
    if (isset($item['#inline'])) {
      return;
    }

    $uri = $item['content']['#uri'];
    $file_system = \Drupal::service('file_system');
    $file_path = $file_system->realpath($uri);

    $xml = new \DOMDocument();
    if (@$xml->load($file_path) === FALSE || $xml->getElementsByTagName('svg')->length === 0) {
      return;
    }

    $svg = $xml->getElementsByTagName('svg') ? $xml->getElementsByTagName('svg')[0] : NULL;

    if (isset($svg)) {
      $viewBox = explode(' ', $svg->getAttribute('viewBox'));
      $width = $svg->getAttribute('width') ?: $viewBox[2];
      $height = $svg->getAttribute('height') ?: $viewBox[3];

      $item['content']['#attributes'] += [
        'width' => $width,
        'height' => $height,
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for oembed media field.
 * 
 * Set 16/9 Aspect for remote Videos.
 */
function uebertool_enhancements_preprocess_field__media__field_media_oembed_video__remote_video(array &$variables): void {
  foreach ($variables['items'] as &$item) {
    $attr = $item['content']['#attributes'];
    $width = $attr['width'];
    $height = $attr['height'];

    if ($width && $height) {
      $item['content']['#attributes']['style'] = [
        'aspect-ratio: ' . $width . ' / ' . $height,
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for oembed.
 * 
 * Lazy load YouTube videos.
 */
function uebertool_enhancements_preprocess_media_oembed_iframe(array &$variables): void {
  $resource = $variables['resource'];

  if ($resource->getProvider()->getName() === 'YouTube') {
    $variables['media'] = str_replace('<iframe', '<iframe loading="lazy" ', (string) $variables['media']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 * 
 * Add menu attributes to menu blocks. This exposes the menu name, language and last changed time
 * as attributes. This is useful for decoupled menus.
 */
function uebertool_enhancements_preprocess_block(array &$variables): void {
  if (isset($variables['content']) && isset($variables['content']['#theme']) && $variables['content']['#theme'] === 'menu') {
    $menuAttributes = new Attribute([
      'menu' => $variables['content']['#menu_name'],
      'lang' => \Drupal::languageManager()->getCurrentLanguage()->getId(),
      'cache-tag' => time(),
    ]);
  
    $variables['menu_attributes'] = $menuAttributes;
  }
}

/**
 * Implements hook_preprocess_HOOK() for views.
 * 
 * Expose view mode of children to parent view.
 */
function uebertool_enhancements_preprocess_views_view(array &$variables): void {
  $variables['title'] = $variables['view']->getTitle();

  if (isset($variables['rows'][0]['#rows'][0]['#view_mode'])) {
    $view_mode = $variables['rows'][0]['#rows'][0]['#view_mode'];
    $variables['attributes']['data-items-view-mode'] = $view_mode;
    $variables['items_view_mode'] = $view_mode;
  }
}

/**
 * Implements hook_preprocess_HOOK() for node.
 * 
 * Expose bundle label to node template. The label is often used on Teasers.
 */
function uebertool_enhancements_preprocess_node(array &$variables): void {
  $variables['bundle_label'] = $variables['node']->type->entity->label();
}